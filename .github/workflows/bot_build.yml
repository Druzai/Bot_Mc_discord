name: Build with pyinstaller and release

on:
  push:
    branches:
      - master

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.commit.outputs.source_tag }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt flake8

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=locales
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Get commit tag
        id: commit
        run: echo "source_tag=$(python3 Discord_bot.py -v)" >> $GITHUB_OUTPUT

      - name: Get release notes
        uses: yashanand1910/standard-release-notes@v1.5.0
        id: release_notes
        with:
          changelog_path: ./CHANGELOG.md
          version: ${{ steps.commit.outputs.source_tag }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.commit.outputs.source_tag }}
          name: ${{ steps.commit.outputs.source_tag }}
          body: ${{ steps.release_notes.outputs.release_notes }}
          draft: false
          prerelease: false
          target_commitish: ${{ github.sha }}

  release_built_assets:
    name: Release built assets
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.8, "3.11", "3.12" ]
        os: [ "ubuntu-20.04", "windows-2019", "macos-12" ]
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-build.txt

      - name: Install gettext for Linux
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install gettext

      - name: Install gettext for macOS
        if: matrix.os == 'macos-12'
        run: |
          brew update
          brew install gettext

      - name: Build with pyinstaller
        run: make

      - name: Rename release asset for Windows
        if: matrix.os == 'windows-2019'
        run: mv ./dist_build/Discord_bot.exe ./dist_build/Discord_bot_windows_x64_p${{ matrix.python-version }}_v${{ needs.create_release.outputs.tag }}.exe

      - name: Rename release asset for Linux
        if: matrix.os == 'ubuntu-20.04'
        run: mv ./dist_build/Discord_bot ./dist_build/Discord_bot_linux_x64_p${{ matrix.python-version }}_v${{ needs.create_release.outputs.tag }}

      - name: Rename release asset for macOS
        if: matrix.os == 'macos-12'
        run: mv ./dist_build/Discord_bot ./dist_build/Discord_bot_macos_x64_p${{ matrix.python-version }}_v${{ needs.create_release.outputs.tag }}

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create_release.outputs.tag }}
          files: ./dist_build/*
          draft: false
          prerelease: false
          target_commitish: ${{ github.sha }}
